{"version":3,"file":"static/js/534.bc94d3ca.chunk.js","mappings":"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","sources":["components/errorMessage/index.ts","components/charList/CharList.tsx","components/skeleton/Skeleton.tsx","components/charInfo/CharInfo.tsx","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","components/errorBoundary/index.ts","components/errorBoundary/ErrorBoundary.tsx","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","components/randomChar/RandomChar.tsx","components/pages/MainPage.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import ErrorMessage from './ErrorMessage'\r\n\r\nexport default ErrorMessage\r\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport './charList.scss'\r\nimport { MyChar } from 'type/types'\r\nimport useMarvelService, { transformCharacter } from 'services/MarvelService'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport Spinner from '../spinner/Spinner'\r\n\r\ntype MyProps = {\r\n    onCharSelected: (id: number) => void\r\n}\r\n\r\nfunction CharList({ onCharSelected }: MyProps) {\r\n    const { loading, error, getAllcharacters } = useMarvelService()\r\n\r\n    const [chars, setChars] = useState<MyChar[]>([])\r\n    const [currentOffset, setCurrentOffset] = useState<number>(200)\r\n    const [charEnded, setCharEnded] = useState<boolean>(false)\r\n    const [newItemsLoading, setNewItemsLoading] = useState<boolean>(false)\r\n\r\n    const onCharsloaded = useCallback(async (newChars: MyChar[]) => {\r\n        let ended = false\r\n        if (newChars.length < 9) {\r\n            ended = true\r\n        }\r\n\r\n        setChars((charsData) => [...charsData, ...newChars])\r\n        setNewItemsLoading(newItemsLoading)\r\n        setCurrentOffset(currentOffset + 9)\r\n        setCharEnded(ended)\r\n    }, [])\r\n\r\n    const updateData = useCallback(\r\n        async (initial: boolean, offset = 200) => {\r\n            if (initial) {\r\n                setNewItemsLoading(false)\r\n            } else {\r\n                setNewItemsLoading(true)\r\n            }\r\n\r\n            getAllcharacters(offset).then((result) => {\r\n                if (result && result !== null) {\r\n                    onCharsloaded(result.data.results.map(transformCharacter))\r\n                }\r\n            })\r\n        },\r\n        [onCharsloaded, getAllcharacters]\r\n    )\r\n\r\n    useEffect(() => {\r\n        updateData(true, currentOffset)\r\n    }, [])\r\n\r\n    const itemRefs: HTMLLIElement[] = []\r\n\r\n    const setRef = (ref: HTMLLIElement) => {\r\n        if (ref) {\r\n            itemRefs.push(ref)\r\n        }\r\n    }\r\n\r\n    const focusOnItem = (idx: number) => {\r\n        itemRefs.forEach((item) => item.classList.remove('char__item_selected'))\r\n        itemRefs[idx].classList.add('char__item_selected')\r\n        itemRefs[idx].focus()\r\n    }\r\n\r\n    const renderItems = (arr: MyChar[]) => {\r\n        return arr.map((item, i) => {\r\n            const fallBack = !!(\r\n                item.thumbnail.indexOf('image_not_available') !== -1\r\n            )\r\n            return (\r\n                <li\r\n                    key={item.id}\r\n                    className=\"char__item\"\r\n                    ref={setRef}\r\n                    onClick={() => {\r\n                        onCharSelected(item.id)\r\n                        focusOnItem(i)\r\n                    }}\r\n                    role=\"presentation\"\r\n                >\r\n                    <img\r\n                        src={item.thumbnail}\r\n                        alt={item.name}\r\n                        style={\r\n                            fallBack\r\n                                ? { objectFit: 'unset' }\r\n                                : { objectFit: 'cover' }\r\n                        }\r\n                    />\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    const items = renderItems(chars)\r\n    const errorMessage = error ? <ErrorMessage /> : null\r\n    const spinner =\r\n        loading && !newItemsLoading ? <Spinner loading={loading} /> : null\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            <ul className=\"char__grid\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {items}\r\n            </ul>\r\n            <button\r\n                type=\"button\"\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemsLoading}\r\n                style={{ display: charEnded ? 'none' : 'block' }}\r\n                onClick={() => updateData(false, currentOffset)}\r\n            >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharList\r\n","import React from 'react'\r\nimport './skeleton.scss'\r\n\r\nfunction Skeleton() {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">\r\n                Please select a character to see information\r\n            </p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\" />\r\n                    <div className=\"pulse skeleton__mini\" />\r\n                </div>\r\n                <div className=\"pulse skeleton__block\" />\r\n                <div className=\"pulse skeleton__block\" />\r\n                <div className=\"pulse skeleton__block\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton\r\n","import React, { useState, useEffect } from 'react'\r\nimport './charInfo.scss'\r\nimport { MyChar, IComicsItem } from 'type/types'\r\nimport useMarvelService from 'services/MarvelService'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport Spinner from '../spinner/Spinner'\r\nimport Sceleon from '../skeleton/Skeleton'\r\n\r\ntype MyViewProps = {\r\n    char: MyChar\r\n}\r\nfunction View({ char }: MyViewProps) {\r\n    const { name, description, thumbnail, homepage, wiki, comics } = char\r\n    const fallBack = !!(thumbnail.indexOf('image_not_available') !== -1)\r\n\r\n    const renderComicsItems = (arr: IComicsItem[]) => {\r\n        return arr.slice(0, 10).map((item, i) => (\r\n            <li key={i} className=\"char__comics-item\">\r\n                {item.name}\r\n            </li>\r\n        ))\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img\r\n                    src={thumbnail}\r\n                    alt=\"abyss\"\r\n                    style={\r\n                        fallBack\r\n                            ? { objectFit: 'unset' }\r\n                            : { objectFit: 'cover' }\r\n                    }\r\n                />\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">{description}</div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics && comics.items.length > 0 ? (\r\n                    renderComicsItems(comics.items)\r\n                ) : (\r\n                    <h4>There is no comics of this character.</h4>\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\ntype MyProps = {\r\n    charId: number\r\n}\r\n\r\nfunction CharInfo({ charId }: MyProps) {\r\n    const { error, loading, getOneCharacter, clearError } = useMarvelService()\r\n    const [char, setChar] = useState<MyChar>({\r\n        id: charId,\r\n        name: '',\r\n        description: '',\r\n        thumbnail: '',\r\n        homepage: '',\r\n        wiki: '',\r\n        comics: {\r\n            available: 0,\r\n            collectionURI: '',\r\n            items: [],\r\n            returned: 0,\r\n        },\r\n    })\r\n\r\n    const onCharLoaded = (newchar: MyChar) => {\r\n        setChar(newchar)\r\n    }\r\n\r\n    const updateChar = () => {\r\n        if (!charId) {\r\n            return\r\n        }\r\n        clearError()\r\n        getOneCharacter(charId).then((result) => {\r\n            if (result && result !== null) {\r\n                onCharLoaded(result[0])\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [charId])\r\n\r\n    const charExist = !!char.id\r\n    const skeleton = charExist || loading || error ? null : <Sceleon />\r\n    const errorMessage = error ? <ErrorMessage /> : null\r\n    const spinner = loading ? <Spinner loading={loading} /> : null\r\n    const content = !(loading || error || !charExist) ? (\r\n        <View char={char} />\r\n    ) : null\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharInfo\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import ErrorBoundary from './ErrorBoundary'\r\n\r\nexport default ErrorBoundary\r\n","import React, { Component } from 'react'\r\nimport ErrorMessage from '../errorMessage'\r\n\r\ntype MyState = {\r\n    error: boolean\r\n}\r\n\r\ntype MyProps = {\r\n    children: React.ReactNode\r\n}\r\nclass ErrorBoundary extends Component<MyProps, MyState> {\r\n    static componentDerivedStateFromError(error: Error) {\r\n        return { error: true }\r\n    }\r\n\r\n    constructor(props: MyProps) {\r\n        super(props)\r\n        this.state = {\r\n            error: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n        console.log('Unchaught error: ', error, errorInfo)\r\n\r\n        this.setState({ error: true })\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.state\r\n        const { children } = this.props\r\n        if (error) {\r\n            // return <h1>Sorry.. there was an error</h1>\r\n            return <h1>Sorry.. there was an error</h1>\r\n        }\r\n\r\n        return children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import React, { FC, useEffect, useState } from 'react'\r\nimport './randomChar.scss'\r\nimport mjolnir from 'assets/img/mjolnir.png'\r\nimport useMarvelService from 'services/MarvelService'\r\nimport { MyChar } from 'type/types'\r\nimport Spinner from '../spinner/Spinner'\r\n\r\nimport ErrorMessage from '../errorMessage'\r\n\r\nfunction View({ char, cutDescription }: MyFProps) {\r\n    const { name, description, thumbnail, homepage, wiki } = char\r\n    const callBack = !!(thumbnail.indexOf('image_not_available') !== -1)\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img\r\n                src={thumbnail}\r\n                alt=\"Random character\"\r\n                className={\r\n                    callBack ? 'randomchar__img_fallback' : 'randomchar__img'\r\n                }\r\n            />\r\n\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {cutDescription(description)}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype MyState = {\r\n    char: MyChar\r\n    loading: boolean\r\n    error: boolean\r\n}\r\n\r\n// type MyProps = {\r\n//     text: string\r\n// }\r\n\r\ntype MyFProps = {\r\n    char: MyChar\r\n    cutDescription: (text: string) => string\r\n}\r\n\r\nfunction RandomChar() {\r\n    const [char, setCahr] = useState<MyChar>({\r\n        id: 0,\r\n        name: '',\r\n        description: '',\r\n        thumbnail: '',\r\n        homepage: '',\r\n        wiki: '',\r\n    })\r\n\r\n    const { error, loading, getOneCharacter, clearError } = useMarvelService()\r\n\r\n    // const onError = () => {\r\n    //     setError(true)\r\n    //     setLoading(false)\r\n    // }\r\n\r\n    const onCharLoaded = (newChar: MyChar) => {\r\n        setCahr(newChar)\r\n    }\r\n\r\n    function updateChar() {\r\n        clearError()\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\r\n        getOneCharacter(id).then((result) => {\r\n            if (result && result !== null) {\r\n                onCharLoaded(result[0])\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [])\r\n\r\n    const cutDescription = (text: string) => {\r\n        if (text) {\r\n            if (text.length > 200) {\r\n                const x = text.slice(0, 200)\r\n                return `${x}...`\r\n            }\r\n            return text\r\n        }\r\n        return 'There is no descriptiion of this character'\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null\r\n    const spinner = loading ? <Spinner loading={loading} /> : null\r\n    const content = !(loading || error) ? (\r\n        <View char={char} cutDescription={cutDescription} />\r\n    ) : null\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {/* {loading ? (\r\n                    <ClipLoader\r\n                        color=\"darkred\"\r\n                        loading={loading}\r\n                        size={100}\r\n                        css={override}\r\n                    />\r\n                ) : (\r\n                    <View char={char} cutDescription={this.cutDescription} />\r\n                )} */}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!\r\n                    <br />\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">Or choose another one</p>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"button button__main\"\r\n                    onClick={updateChar}\r\n                >\r\n                    <div className=\"inner\">Try it</div>\r\n                </button>\r\n                <img\r\n                    src={mjolnir}\r\n                    alt=\"mjolnir\"\r\n                    className=\"randomchar__decoration\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar\r\n","import React, { useState } from 'react'\r\nimport decoration from 'assets/img/vision.png'\r\nimport CharList from '../charList/CharList'\r\nimport CharInfo from '../charInfo/CharInfo'\r\nimport ErrorBoundary from '../errorBoundary'\r\nimport RandomChar from '../randomChar/RandomChar'\r\n\r\nfunction MainPage() {\r\n    const [selectedChar, setSelectedChar] = useState<number>(0)\r\n\r\n    const onCharSelected = (id: number) => {\r\n        setSelectedChar(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <CharList onCharSelected={onCharSelected} />\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ErrorMessage","onCharSelected","useMarvelService","loading","error","getAllcharacters","useState","chars","setChars","currentOffset","setCurrentOffset","charEnded","setCharEnded","newItemsLoading","setNewItemsLoading","onCharsloaded","useCallback","newChars","ended","length","charsData","updateData","initial","offset","then","result","data","results","map","transformCharacter","useEffect","itemRefs","setRef","ref","push","items","item","i","fallBack","thumbnail","indexOf","className","onClick","idx","id","forEach","classList","remove","add","focus","role","src","alt","name","style","objectFit","errorMessage","spinner","Spinner","type","disabled","display","View","arr","char","description","homepage","wiki","comics","href","slice","charId","getOneCharacter","clearError","available","collectionURI","returned","setChar","updateChar","newchar","charExist","skeleton","content","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","self","call","TypeError","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","Super","NewTarget","this","arguments","apply","ErrorBoundary","subClass","superClass","create","value","Constructor","protoProps","staticProps","instance","state","errorInfo","console","log","setState","children","Component","cutDescription","callBack","setCahr","Math","floor","random","newChar","text","x","mjolnir","selectedChar","setSelectedChar","decoration","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","from","unsupportedIterableToArray"],"sourceRoot":""}